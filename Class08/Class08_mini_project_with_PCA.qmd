---
title: "Class 8: Mini Project"
author: Ashlyn Murphy
format: pdf
---

```{r}
#save data into proj dir
fna.data <- "WisconsinCancer.csv"

wisc.df <- read.csv(fna.data, row.names = 1)
head(wisc.df)
```
> Q. How many samples are in this dataset?

```{r}
nrow(wisc.df)
```

> Q. How many variables?

```{r}
ncol(wisc.df)
```

> Q. How many malignant and how many benign samples?

```{r}
table(wisc.df$diagnosis)
```

> Q. How many variables/features in the data are suffixed with _mean?

```{r}
colnames(wisc.df)
```

```{r}
grep("_mean", colnames(wisc.df))
length(grep("_mean", colnames(wisc.df)))
```

> Q. What features have mean values?

```{r}
grep("_mean", colnames(wisc.df), value = TRUE)
```

remove the diagnosis column

```{r}
# We can use -1 here to remove the first column
wisc.data <- wisc.df[,-1]

head(wisc.data)
```

```{r}
# Create diagnosis vector for later 
diagnosis <- as.factor(wisc.df$diagnosis) 
```

#PCA

The main PCA function in base R is called `prcomp()`

Before doing PCA, check if data needs to be scaled

Two common reasons for scaling data include:
- The input variables use different units of measurement.
- The input variables have significantly different variances.

```{r}
round(apply(wisc.data, 2, sd), 2)
```
scale this

```{r}
wisc.pr <- prcomp(wisc.data, scale = TRUE)
```
summarize this

```{r}
summary(wisc.pr)
```
> Q. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

44.27%

> Q. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

PC1, PC2, and PC3

> Q. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

PC1-PC7

make a scree plot of this data

```{r}
attributes(wisc.pr)
```

```{r}
pr.var <- wisc.pr$sdev^2

#proportion of variance
pve <- pr.var/sum(pr.var)

plot(pve, type = "o")

```


Create a "main results" plot of this data

PCA is a method for compressing a lot of data into mcuh fewer dimensions by focusing on whats different btwn the dimensions

length and direction of PC1 is mostly determined by extreme points on the end of the component

```{r}
library(ggplot2)
head(wisc.pr$x)

pc <- as.data.frame(wisc.pr$x)

ggplot(pc, aes(PC1, PC2, col = diagnosis)) +
  geom_point(alpha = 0.3)
```

# Hierarchical clustering

> Q. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
data.scaled <- scale(wisc.data)

data.dist <- dist(data.scaled)
```
```{r}
wisc.hclust <- hclust(dist(data.scaled))

plot(wisc.hclust)

abline(h = 19, col="red", lty=2)
```

```{r}
grps <- cutree(wisc.hclust, h = 19)
table(grps)
```
 
can also use the `table()` function to cross tabulate


```{r}
table(grps, diagnosis)
```

# Clustering on PCA results

can cluster in PC-space using as many or as few PC's as we want

using 3 PC's to start with (PC1, PC2, PC3)

```{r}
dist.pc <- dist(wisc.pr$x[,1:3])

hclust.pc <- hclust(dist.pc, method="ward.D2")

plot(hclust.pc)
abline(h = 60, col="red", lty=2)
```

```{r}
grps.pc <- cutree(hclust.pc, k = 2)
table(grps.pc, diagnosis)
```

Calculating the accuracy - the proportion of samples we got correct if we take cluster 1 to rep all M and cluster 2 to rep all B

```{r}
(179 + 333)/(nrow(wisc.data))
```

```{r}
plot(wisc.pr$x[,1:2], col=diagnosis)
```

```{r}
g <- as.factor(grps.pc)
levels(g)
```

```{r}
g <-  relevel(g,2)
levels(g)
```

```{r}
plot(wisc.pr$x[,1:2], col = g)
```

```{r}
grps.pc <- cutree(hclust.pc, k = 4)
table(grps.pc, diagnosis)
```


# Prediction

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```

```{r}
plot(wisc.pr$x[,1:2], col=g)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

> Q. Which of these new patients should we prioritize for follow up based on your results?

Should follow up first with patient 2 bc theyre predicted to have malignant results

