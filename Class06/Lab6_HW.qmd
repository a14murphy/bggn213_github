---
title: "Class6_Homework"
author: "Ashlyn Murphy"
format: pdf
---
Code to improve:
```{r}
library(bio3d)
s1 <- read.pdb("4AKE") # kinase with drug
s2 <- read.pdb("1AKE") # kinase no drug
s3 <- read.pdb("1E4Y") # kinase with drug
s1.chainA <- trim.pdb(s1, chain="A", elety="CA")
s2.chainA <- trim.pdb(s2, chain="A", elety="CA")
s3.chainA <- trim.pdb(s1, chain="A", elety="CA")
s1.b <- s1.chainA$atom$b
s2.b <- s2.chainA$atom$b
s3.b <- s3.chainA$atom$b
plotb3(s1.b, sse=s1.chainA, typ="l", ylab="Bfactor")
plotb3(s2.b, sse=s2.chainA, typ="l", ylab="Bfactor")
plotb3(s3.b, sse=s3.chainA, typ="l", ylab="Bfactor")
```

> Q6. How would you generalize the original code above to work with any set of input protein structures?

```{r}
pdb_name <- "4AKE"
#' Title: Generate a B factor plot for a pdb file
#'
#' @param pdb_name 
#'
#' @return plot of B factor values vs residue
#' @export
#'
#' @examples 
#'    pdb_plot("4AKE")
#'    
pdb_plot <- function(pdb_name) {
  #read in input pdb file set as pdb_name
  s1 <- read.pdb(pdb_name)
  #get only chain A from the pdb file
  s1.chainA <- trim.pdb(s1, chain = "A", elety = "CA")
  #get B factors from chain A
  s1.b <- s1.chainA$atom$b
  #plot
  plotb3(s1.b, sse=s1.chainA, typ="l", ylab="Bfactor")
}
```

```{r}
pdb_plot("4AKE")
```

